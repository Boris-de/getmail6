
                                    getmail
                                       
Utility to retrieve mail from POP3 servers with mbox and reliable Maildir
delivery

  by Charles Cazabon <getmail@discworld.dyndns.org>
  
   Copyright © 2000 Charles Cazabon.
   Licensed under the GNU General Public License version 2. See the file
   COPYING for license details.
   
About getmail

   getmail is intended as a simple replacement for 'fetchmail', for those
   people who don't need its various and sundry configuration options,
   complexities, and bugs. It retrieves mail from one or more POP3
   servers for one or more email accounts, and reliably delivers into a
   Maildir specified on a per-account basis. It can now also deliver into
   'mbox' files, although this should not be attempted over NFS.
   
Installing getmail

   getmail is a Python script. Ensure the Python interpreter is installed
   on your machine (see www.python.org for details). Put the script
   somewhere with executable permissions (probably 0755). If you like,
   make a symbolic link named 'getmail' to the actual script
   'getmail.py'.
   
Using getmail

   Run without arguments for help.
   
  Retrieving mail on a one-time basis
  
   To retrieve mail for accounts on a one-time basis, run with arguments
   as follows:
   getmail.py [options] user1@mailhost1[:port],destination1[,password1] u
   ser2@mailhost2[:port],destination2[,password2]
   
   For example, to retrieve mail for account 'joe' on mailhost
   'mail.isp.com', running on port 8110, and deliver that mail into the
   maildir 'Maildir' in your home directory, run as follows:
   getmail.py [options] joe@mail.isp.com:8110,$HOME/Maildir,password
   
   'destination' can be either a Maildir or an mbox file. getmail
   auto-detects Maildirs, and assumes regular files are mbox files.
   
   If you omit the final ',password', getmail will prompt you for your
   password. You may omit the :port portion if the server runs on the
   standard POP3 port (110).
   
   You can retrieve mail for multiple accounts at once, delivering to
   different maildirs, by specifying multiple arguments:
   getmail.py [options] user1@mailhost1.net:8110,$HOME/Maildir,password u
   ser2@mailhost2.com,$HOME/user2mbox
   
   Note in this case, mailhost2 is on the standard POP3 port and the user
   will be prompted only for user2's password.
   
  Retrieving mail on a regular basis
  
   To use getmail to retrieve from the same accounts on a regular basis,
   and to be able to retrieve only mail messages which getmail has not
   previously retrieved, set up getmail as follows:
    1. Create a .getmail/ directory in your home directory. If you want
       to call it something else or have it in a different location, set
       the environment variable GETMAIL to be the location of the
       directory.
    2. Create a file .getmailrc in the above directory. This file is
       similar in format to an MS-Windows .ini file. In it, place one
       section for each mail account you wish to retrieve mail for. The
       section is in this format:
       [identifier]
       account=username
       host=popmailhost
       port=port
       password=password
       destination=destinationpath
       delete=value
       readall=value
       The options can be specified in any order. Blank lines are
       ignored, as is anything after a '#' symbol.
       identifier is not currently used by getmail. They must be unique,
       and should be meaningful to you.
       account is your POP3 account name.
       host is the fully-qualified domain name of the POP3 server (e.g.
       mailhost.isp.com)
       port is optional and defaults to the standard POP3 port (110).
       password is optional. If not supplied, getmail will prompt for
       passwords.
       destination is the path to the destination Maildir or mbox file.
       delete is optional, and controls whether getmail deletes the mail
       from the POP3 server after retrieving it. Valid values include
       'yes' or 'no', and defaults to 'no'.
       readall is optional, and controls whether getmail retrieves all
       mail, or only unread mail for that account. Valid values include
       'yes' or 'no', and defaults to 'yes'.
       See the included example.getmailrc file for more details.
    3. Run getmail with no options to retrieve all mail for accounts
       specified in the .getmailrc file.
       Use option -n or --new for only unread mail.
       Use option -v or --verbose to see what's going on.
    4. You can specify personal default options in the environment
       variable 'GETMAILOPTS'. To make getmail always be verbose, and
       always delete retrieved mail from the server, set it to something
       like "--verbose --delete". Again, you can set this every time you
       login in your .bash_profile or .bashrc file if you use the bash
       shell.
       
  Experimental Support for Domain Mailboxes
  
   I have added experimental support for domain (multidrop) mailboxes. A
   domain mailbox is a POP3 mailbox which receives mail for multiple
   users. For example, all mail for anyone at mycompany.com might be
   delivered to a single POP3 mailbox named 'mycompany@isp.com'.
   
   getmail can be configured to retrieve mail from a domain mailbox, and
   deliver each message separately, to the user it was originally
   addressed to. This type of operation is not supported in a standard
   way by the majority of the email infrastructure, so the support is
   experimental for now. I would appreciate feedback on how this works
   for you if you use it.
   
   getmail tries to determine who each message was originally intended
   for by looking at the message headers. If the first valid header is a
   qmail-style "Delivered-To: " header, it will use that as the
   recipient. If that header does not exist, it will look for recipients
   in "Resent-To: ", "Resent-cc: ", and "Resent-bcc: " headers. If none
   of those headers exist, it will look for recipients in "To: ", "cc: ",
   and "bcc: " headers.
   
   getmail compares the recipients it finds against email addresses
   supplied in the .getmailrc configuration file. For each matching
   address it finds, getmail delivers a copy of that message to a
   destination Maildir or mbox file specified for that address. If it
   finds no matches, it delivers the message to a default destination,
   which should be the postmaster or other person responsible for sorting
   out email issues in that domain.
   
   Note that the current support has limitations on characters which can
   be present in the handled email addresses. This will change in the
   future.
   
   The configuration file section for a domain mailbox should look like
   this:
   [Section title]
   type=domainbox
   account=pop3username
   host=pophost.domain
   password=pop_password
   destination=/path/to/default_delivery_destination
   delete=(yes|no)
   readall=(yes|no)
   email_address=/path/to/destination
   email_address2=/path/to/destination2
   [...]
   
   When specifying email addresses, the '@' symbol must be replaced with
   an underscore ('_'). Non-alphanumeric characters in the email address
   will probably cause getmail to fail to parse the file.
   
   Some examples of the "email=destination" lines are:
   joe_smallcompany.com=/home/joe/Maildir
   info_smallcompany.com=/home/paula/inbox
   
   More details are available in the file USAGE.
   
Current Version

   The current version of getmail should be available at
   http://www.qcc.sk.ca/~charlesc/software/getmail/ 
   
   The current version is v.0.98, dated 09-Jan-2000.
   Questions, comments, bug reports, and feature requests should be
   directed to me at <getmail@discworld.dyndns.org>.
   
  Download
  
                               Download now:
                            getmail-0.98.tar.gz
    http://www.qcc.sk.ca/~charlesc/software/getmail/getmail-0.98.tar.gz
                            getmail-0.98.tar.bz2
    http://www.qcc.sk.ca/~charlesc/software/getmail/getmail-0.98.tar.bz2
                                      
   Older versions may be found in
   http://www.qcc.sk.ca/~charlesc/software/getmail/old-versions/
